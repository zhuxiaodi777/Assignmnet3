/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.admin;

//import static com.oracle.nio.BufferSecrets.instance;
import java.awt.Component;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import static javax.management.Query.value;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;
import static jdk.nashorn.internal.objects.Global.instance;
import model.AdminHistory;
import model.AdminProfile;
import model.UserHistory;
import model.UserProfile;
import model.DoctorHistory;
import model.DoctorProfile;
import model.CommHistory;
import model.CommProfile;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Clark
 */
public class AdminAccountJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    AdminHistory adminHistory;
    AdminProfile admin;
    DoctorHistory doctorHistory;
    DoctorProfile doctor;
    private DefaultTableModel model;
   UserHistory userHistory;
    UserProfile user;
    
    public AdminAccountJPanel(JPanel upc,DoctorHistory dh, UserHistory uh) {
        initComponents();
        userProcessContainer = upc;
        doctorHistory = dh;
        userHistory = uh;  
        populateUserTable();
        populateDoctorTable();
  
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txthospital = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtspecialty = new javax.swing.JTextField();
        jbtDelete = new javax.swing.JButton();
        jbtUpdateDate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        cmbsearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcommunity = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        jbtDelete1 = new javax.swing.JButton();
        jbtUpdateDate1 = new javax.swing.JButton();
        txtname1 = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtUserSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbusersearch = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Account");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txthospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthospitalActionPerformed(evt);
            }
        });

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        txtspecialty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtspecialtyActionPerformed(evt);
            }
        });

        jbtDelete.setText("Delete");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        jbtUpdateDate.setText("UpdateDate");
        jbtUpdateDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateDateActionPerformed(evt);
            }
        });

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor_Name", "community", "city", "hospital", "email", "specialty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoctor);

        cmbsearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor_Name", "community", "city", "hospital", "email", "specialty" }));
        cmbsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbsearchActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        jLabel2.setText("search");

        txtcommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcommunityActionPerformed(evt);
            }
        });

        txtcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcityActionPerformed(evt);
            }
        });

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Gender", "EmailAddress", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblUser);

        jbtDelete1.setText("Delete");
        jbtDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelete1ActionPerformed(evt);
            }
        });

        jbtUpdateDate1.setText("UpdateDate");
        jbtUpdateDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateDate1ActionPerformed(evt);
            }
        });

        txtname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtname1ActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtEmailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailAddressActionPerformed(evt);
            }
        });

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserSearchActionPerformed(evt);
            }
        });
        txtUserSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserSearchKeyReleased(evt);
            }
        });

        jLabel3.setText("search");

        cmbusersearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Age", "Gender", "EmailAddress" }));
        cmbusersearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbusersearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(38, 38, 38))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtname1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115)
                        .addComponent(jbtUpdateDate1)
                        .addGap(18, 18, 18)
                        .addComponent(jbtDelete1)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cmbsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(99, 99, 99)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtcommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txthospital, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtspecialty, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbtUpdateDate)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbtDelete)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbusersearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtspecialty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtUpdateDate))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txthospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtcommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbusersearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtUpdateDate1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents




    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txthospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthospitalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthospitalActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtspecialtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtspecialtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtspecialtyActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblDoctor.getSelectedRow();
        
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        DoctorProfile se = (DoctorProfile) model.getValueAt(selectedRowIndex, 0);
        
        doctorHistory.removeDoctor(se);
        
        JOptionPane.showMessageDialog(this, "Doctor Profile Deleted");
        
        populateDoctorTable();
    }//GEN-LAST:event_jbtDeleteActionPerformed

    private void jbtUpdateDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateDateActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        
        DefaultTableModel model=(DefaultTableModel)tblDoctor.getModel();
        int row=tblDoctor.getSelectedRow();
 
        if(txtname.getText().length()==0
                || txtcommunity.getText().length()==0
                || txtcity.getText().length()==0
                || txthospital.getText().length()==0
                || txtemail.getText().length()==0
                || txtspecialty.getText().length()==0
                ){
               JOptionPane.showMessageDialog(this, "Check the format!");
                return; 
            }

        model.setValueAt(txtname.getText(), row, 0);
        model.setValueAt(txtcommunity.getText(), row, 1);
        model.setValueAt(txtcity.getText(), row, 2);
        model.setValueAt(txthospital.getText(), row, 3);
        model.setValueAt(txtemail.getText(), row, 4);
        model.setValueAt(txtspecialty.getText(), row, 5);
        
        txtname.setText("");
        txtcommunity.setText("");
        txtcity.setText("");
        txthospital.setText("");
        txtemail.setText("");
        txtspecialty.setText("");
        
    }//GEN-LAST:event_jbtUpdateDateActionPerformed

    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        // TODO add your handling code here:
        //鼠标点击选中表格中一行信息可像是在文本字段中。
        DefaultTableModel model=(DefaultTableModel) tblDoctor.getModel();
        //定义变量row为鼠标点击的行数。
        int row=tblDoctor.getSelectedRow();
        //函数getValueAt返回要查询的行和列处单元格的属性值

        txtname.setText(model.getValueAt(row, 0).toString());
        txtcommunity.setText(model.getValueAt(row, 1).toString());
        txtcity.setText(model.getValueAt(row, 2).toString());
        txthospital.setText(model.getValueAt(row, 3).toString());
        txtemail.setText(model.getValueAt(row, 4).toString());
        txtspecialty.setText(model.getValueAt(row, 5).toString());

        //                ImageIcon icon = new ImageIcon(txtPhoto.getText());
        //                Image image = icon.getImage();
        //                lblPhoto.setIcon(icon);
    }//GEN-LAST:event_tblDoctorMouseClicked

    private void cmbsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbsearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String ss = txtSearch.getText();
        search(ss);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtcommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcommunityActionPerformed

    private void txtcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcityActionPerformed

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        //鼠标点击选中表格中一行信息可像是在文本字段中。
        DefaultTableModel model=(DefaultTableModel) tblUser.getModel();
        //定义变量row为鼠标点击的行数。
        int row=tblUser.getSelectedRow();
        //函数getValueAt返回要查询的行和列处单元格的属性值

        txtname.setText(model.getValueAt(row, 0).toString());
        txtAge.setText(model.getValueAt(row, 1).toString());
        txtGender.setText(model.getValueAt(row, 2).toString());
        txtEmailAddress.setText(model.getValueAt(row, 3).toString());
        txtPassword.setText(model.getValueAt(row, 4).toString());

        //                ImageIcon icon = new ImageIcon(txtPhoto.getText());
        //                Image image = icon.getImage();
        //                lblPhoto.setIcon(icon);
    }//GEN-LAST:event_tblUserMouseClicked

    private void jbtDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelete1ActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblUser.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
        UserProfile se = (UserProfile) model.getValueAt(selectedRowIndex, 0);

        userHistory.deleteUser(se);

        JOptionPane.showMessageDialog(this, "User Profile Deleted");

        populateUserTable();
    }//GEN-LAST:event_jbtDelete1ActionPerformed

    private void jbtUpdateDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateDate1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        DefaultTableModel model=(DefaultTableModel)tblUser.getModel();
        int row=tblUser.getSelectedRow();

        if(txtname1.getText().length()==0
            || txtAge.getText().length()==0
            || txtGender.getText().length()==0
            || txtEmailAddress.getText().length()==0
            || txtPassword.getText().length()==0
            //|| txtspecialty.getText().length()==0
        ){
            JOptionPane.showMessageDialog(this, "Check the format!");
            return;
        }

        model.setValueAt(txtname1.getText(), row, 0);
        model.setValueAt(txtAge.getText(), row, 1);
        model.setValueAt(txtGender.getText(), row, 2);
        model.setValueAt(txtEmailAddress.getText(), row, 3);
        model.setValueAt(txtPassword.getText(), row, 4);

        txtname1.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtEmailAddress.setText("");
        txtPassword.setText("");

    }//GEN-LAST:event_jbtUpdateDate1ActionPerformed

    private void txtname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtname1ActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtEmailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailAddressActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserSearchActionPerformed
        // TODO add your handling code here:
        String ss = txtUserSearch.getText();
        usersearch(ss);
    }//GEN-LAST:event_txtUserSearchActionPerformed

    private void txtUserSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserSearchKeyReleased

    private void cmbusersearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbusersearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbusersearchActionPerformed

//public void dispalyEmployee() {
//DefaultTableModel model =(DefaultTableModel) tblEmployee.getModel();
// int selectedRowIndex = tblEmployee.getSelectedRow();
////
//jTxtName.setText(model.getValueAt(selectedRowIndex,0).toString());
//jTxtAge.setText(model.getValueAt(selectedRowIndex,1).toString());
//jTxtEmployeeID.setText(model.getValueAt(selectedRowIndex,2).toString());
//jTxtCellPhone.setText(model.getValueAt(selectedRowIndex,3).toString());
//jTxtEmailAddress.setText(model.getValueAt(selectedRowIndex,4).toString());
//jTxtGender.setText(model.getValueAt(selectedRowIndex,5).toString());
//jTxtLevel.setText(model.getValueAt(selectedRowIndex,6).toString());
//jTxtTeamInfo.setText(model.getValueAt(selectedRowIndex,7).toString());
//jTxtStartDate.setText(model.getValueAt(selectedRowIndex,8).toString());
//jTxtPositionTitle.setText(model.getValueAt(selectedRowIndex,9).toString());
////Icon icon = new ImageIcon(model.getValueAt(selectedRowIndex,10).toString());
////Icon icon = new ImageIcon(employee.getPhoto());
//lbl_img.setIcon(icon);
//lbl_img.setVisible(true);
//System.out.println(model.getValueAt(selectedRowIndex,10).toString());
//}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cmbsearch;
    private javax.swing.JComboBox<String> cmbusersearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtDelete1;
    private javax.swing.JButton jbtUpdateDate;
    private javax.swing.JButton jbtUpdateDate1;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserSearch;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcommunity;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txthospital;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtname1;
    private javax.swing.JTextField txtspecialty;
    // End of variables declaration//GEN-END:variables

    private void populateDoctorTable(){
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setRowCount(0);
//        cmb  
        for (DoctorProfile ep :doctorHistory.getDoctorhistory()) {
            Object[] row = new Object[7];
            
            row[0] = ep;
//            row[2] = ep.getDoctorProfile().getName();
            row[1] = ep.getCommunity();
            row[2] = ep.getCity();
            row[3] = ep.getHospital();
            row[4] = ep.getEmail();
            row[5] = ep.getSpecialty();
            model.addRow(row);
        }
        
        
     }   
    
    public void search (String str){
        
        model = (DefaultTableModel) tblDoctor.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        tblDoctor.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str,cmbsearch.getSelectedIndex()));
    }

    private void populateUserTable(){
        DefaultTableModel model = (DefaultTableModel) tblUser.getModel();
        model.setRowCount(0);
//        cmb  
        for (UserProfile ep :userHistory.getUserHistory()) {
            Object[] row = new Object[5];
            
            row[0] = ep;
//            row[2] = ep.getDoctorProfile().getName();
//            row[1] = ep.getName();
            row[1] = ep.getAge();
            row[2] = ep.getGender();
            row[3] = ep.getEmailAddress();
            row[4] = ep.getPassword();
            model.addRow(row);
        }
        
        
     }   
    
    public void usersearch (String str){
        
        model = (DefaultTableModel) tblUser.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        tblDoctor.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str,cmbusersearch.getSelectedIndex()));
    }


}
